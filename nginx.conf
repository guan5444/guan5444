
#user  nobody;
worker_processes  auto;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  10240;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    log_format    main
        '$remote_addr\t' #记录客户端IP地址
        '$remote_user\t' #记录客户端用户名称
        '$server_addr\t' #本机IP
        '$connection\t' #连接的序列号
        '$connection_requests\t' #当前通过一个连接获得的请求数量
        '$request_length\t' #请求的长度，包括请求行，请求头和请求正文
        '[$time_local]\t' #通用日志格式下的本地时间
        '$msec\t' #日志写入时间。单位为秒，精度是毫秒
        '"$request"\t' #请求地址
        '$status\t' #相应状态
        '$body_bytes_sent\t' #发送body字节数
        '$bytes_sent\t' #发送字节数
        '"$http_referer"\t' #记录从哪个页面链接访问过来的
        '"$http_user_agent"\t' #记录客户端浏览器相关信息
        '"$http_x_forwarded_for"\t' #这个也是针对记录客户端IP地址的，为了防止篡改，暂时屏蔽掉了
        '$request_time\t' #请求处理时间，单位为秒，精度毫秒；从读入客户端的第一个字节开始，直到把最后一个字符发送给客户端后进行日志写入为止
        '$upstream_response_time\t' #代理响应时间
        '"$sent_http_set_cookie"'; #cookie




server {
    listen 443 ssl;

    server_name jjww.top; 
    root html;
    index index.html index.htm;
    ssl_certificate cert/cert.pem;  
    ssl_certificate_key cert/key.pem; 
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; 
    ssl_prefer_server_ciphers on;
    location / {
            	proxy_pass http://127.0.0.1:5005;
            	proxy_http_version 1.1;
            	proxy_buffering off;
            	proxy_request_buffering off;
            	proxy_set_header Upgrade $http_upgrade;
            	proxy_set_header Connection "upgrade";
            	proxy_set_header Host $host;
            	proxy_set_header X-Forwarded-For $remote_addr;
    }
    # 防止爬虫抓取
    if ($http_user_agent ~* "360Spider|JikeSpider|Spider|spider|bot|Bot|2345Explorer|curl|wget|webZIP|qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|NSPlayer|bingbot")
    {
        return 403;
    }
    error_page   403 404 500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}

server {
    listen 443 ssl http2;

    server_name dash.jjww.top;
    root html;
    index index.html index.htm;
    ssl_certificate cert/cert.pem;
    ssl_certificate_key cert/key.pem;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    location / {
			proxy_set_header   X-Real-IP $remote_addr;
                        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header   Host $host;
                        proxy_pass         http://localhost:3001/;
                        proxy_http_version 1.1;
                        proxy_set_header   Upgrade $http_upgrade;
                        proxy_set_header   Connection "upgrade";
    }
}


server {
    listen 443 ssl http2;

    server_name cpu.jjww.top;
    root html;
    index index.html index.htm;
    ssl_certificate cert/cert.pem;
    ssl_certificate_key cert/key.pem;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    location / {
                        proxy_set_header   X-Real-IP $remote_addr;
                        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header   Host $host;
                        proxy_pass         http://localhost:4000/;
                        proxy_http_version 1.1;
                        proxy_set_header   Upgrade $http_upgrade;
                        proxy_set_header   Connection "upgrade";
    }
}



server {
    listen 443 ssl http2;

    server_name img.jjww.top;
    root html;
    index index.html index.htm;
    ssl_certificate cert/cert.pem;
    ssl_certificate_key cert/key.pem;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    location / {
        proxy_pass         http://localhost:7791/;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header REMOTE-HOST $remote_addr;
    }

	location /qn/ {
        proxy_pass         http://cdnimg.jjww.top/;
    }
}



server {
    listen 443 ssl http2;

    server_name kms.jjww.top;
    root html;
    index index.html index.htm;
    ssl_certificate cert/cert.pem;
    ssl_certificate_key cert/key.pem;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    location / {
                proxy_pass         http://localhost:8808/;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   Host $host;
                proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header REMOTE-HOST $remote_addr;
    }
}



server {
    listen 443 ssl http2;

    server_name alist.jjww.top;
    root html;
    index index.html index.htm;
    ssl_certificate cert/cert.pem;
    ssl_certificate_key cert/key.pem;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Range $http_range;
	    proxy_set_header If-Range $http_if_range;
        proxy_redirect off;
        proxy_pass http://localhost:5244;
        # the max size of file to upload
        client_max_body_size 20000m;
    }
}


server {
    listen 443 ssl http2;

    server_name xy.jjww.top;
    root html;
    index index.html index.htm;
    ssl_certificate cert/cert.pem;
    ssl_certificate_key cert/key.pem;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
        proxy_redirect off;
        proxy_pass http://localhost:5678;
        # the max size of file to upload
        client_max_body_size 20000m;
    }
}



server {
  listen 443 ssl http2;
  server_name blog.jjww.top;
  client_max_body_size 1024m;
  location / {
    proxy_pass http://localhost:8090;
    proxy_set_header HOST $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}



server {
    listen 80;
    server_name jjww.top; 
 

    #rewrite ^(.*)$ https://${server_name}$1 permanent;
    return 301 https://$host$request_uri;
}



}
